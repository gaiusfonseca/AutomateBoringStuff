21. How would you write a regex that matches the full name of someone whose last name is Nakamoto? You can assume that the first name that
comes before it will always be one word that begins with a capital letter. The regex must match the following:
• 'Satoshi Nakamoto'
• 'Alice Nakamoto'
• 'RoboCop Nakamoto'
but not the following:
• 'satoshi Nakamoto' (where the first name is not capitalized)
• 'Mr. Nakamoto' (where the preceding word has a nonletter character)
• 'Nakamoto' (which has no first name)
• 'Satoshi nakamoto' (where Nakamoto is not capitalized)

uma expressão que atende aos requisitos acima foi utilizada no programa abaixo:

import re

sample = ['Satoshi Nakamoto', 'Alice Nakamoto', 'RoboCop Nakamoto', 'satoshi Nakamoto', 'Mr. Nakamoto', 'Nakamoto', 'Satoshi nakamoto']

namePattern = r'([A-Z][a-zA-Z]+)\s([A-Z][a-zA-Z]+)'
nameRegex = re.compile(namePattern)

foundMessage = 'match found! first name is: {fname}, last name is: {lname}'
notFoundMessage = "didn't found a match in: {sampleText}"

for value in sample:
    match = nameRegex.match(value)
    if match != None:
        print(foundMessage.format(fname = match.group(1), lname = match.group(2)))
    else:
        print(notFoundMessage.format(sampleText = value))